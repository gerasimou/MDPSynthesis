<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  	<!--  Project specific -->
  	<groupId>org</groupId>
  	<artifactId>MDPSynthesis</artifactId>  
  	<packaging>jar</packaging>
  	<version>1.0.0</version>
  	<name>MDPSynthesis</name>
  	<url>http://maven.apache.org</url>


  	<!--  Properties -->
	<properties>
		<jdk.version>11</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- <log4j.configuration>./resources/log4j.properties</log4j.configuration> -->
	</properties>

	
  	<!-- Repositories -->
	<repositories>
		<repository>
			<name>Local repository</name>
	   		<id>localRepository</id>
        	<url>file://${project.basedir}/libs</url>
	 	</repository>
	</repositories>


	<dependencies>
		<!--  -->
 		<dependency>
			<groupId>org.modelChecker</groupId>
			<artifactId>lpsolve55</artifactId>
			<version>1.0</version>
			<type>jar</type>
		</dependency>	
		
		<!--  -->
 		<dependency>
			<groupId>org.modelChecker</groupId>
			<artifactId>jhoafparser</artifactId>
			<version>1.0</version>
			<type>jar</type>
		</dependency>		
		<!--  -->
 		<dependency>
			<groupId>org.evo</groupId>
			<artifactId>EvoChecker</artifactId>
			<version>1.1.1</version>
			<type>jar</type>
		</dependency> 	
  	</dependencies>

  <build>
  		<finalName>MDPSynthesis</finalName>
  
  		<plugins>
  		
			<!-- download source code in Eclipse, best practice -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>

			<!-- Set a compiler level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
 					<excludes>
						<exclude>**/evochecker/_test/*</exclude>
					</excludes>
				</configuration>
				
			</plugin>
			
	  	  <!--  Attach sources -->
		  <plugin>
		  	<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-source-plugin</artifactId>
			<executions>
		    		<execution>
		      		<id>attach-sources</id>
		      		<goals>
		        			<goal>jar</goal>
		      		</goals>
		    		</execution>
	  		</executions>
  		</plugin>
  		
 			<!--  Copy resources to target directory -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
				
					<!--  Copy models directory -->
					<execution>
						<id>copy-models</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target/models</outputDirectory>
							<resources>
								<resource>
									<directory>models</directory>
									<excludes>
										<exclude>**/COPE/**</exclude>
										<exclude>**/dieParam/**</exclude>
										<exclude>**/DPMParam/**</exclude>										
										<exclude>**/ePMC/**</exclude>										
										<exclude>**/FXParam/**</exclude>										
										<exclude>**/Hadoop/**</exclude>										
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					
					<!--  Copy lib directory -->
					<execution>
						<id>copy-lib</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/libs/</outputDirectory>
							<resources>
								<resource>
									<directory>libs</directory>
									<excludes>
										<exclude>**/org/**</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>

					<!--  Copy Python scripts -->
					<execution>
						<id>copy-python</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target/scripts</outputDirectory>
							<resources>
								<resource>
									<directory>scripts</directory>
									<includes>
										<!-- <include>launch.sh</include> -->
										<include>*.py</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					
					<!--  Copy Launch scripts -->
					<execution>
						<id>copy-launch</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>scripts</directory>
									<includes>
										<include>launch.sh</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					
					<!--  Copy resources directory -->
					<execution>
						<id>copy-resources-dir</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory> ${basedir}/target/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}</directory>
									<includes>
										<include>config.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>					

			<!-- Maven Assembly Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4.1</version>
				<executions>
					<!--  prepare uber jar -->
					<execution>
						<id>jar-with-dependencies</id>
						<phase>deploy</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<!-- get all project dependencies -->
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>							
							<!-- MainClass in mainfest make a executable jar -->
							<archive>
							  <manifest>
		 						<mainClass>mdpSynthesis.MainMDPSynthesis</mainClass>
							  </manifest>
							</archive>
						</configuration>
					</execution>
					
					<!--  prepare zip -->
					<execution>
						<id>create-zip</id>
						<phase>verify</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
					        		<descriptor>src/main/assembly/zip.xml</descriptor>
							</descriptors>	
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			
			<!--  Maven shade plugin -->
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-shade-plugin</artifactId>
		        <version>3.2.2</version>
		        <executions>
		        		<execution>
		        			<id>rename-uber-jar</id>
		        			<phase>package</phase>
		        			<goals>
		        				<goal>shade</goal>
		        			</goals>
		        			<configuration>
		        				<finalName>${pom.name}-${pom.version}</finalName>
		        				<!-- All dependencies to be packaged in the jar -->
		        				<!-- <shadedArtifactAttached>true</shadedArtifactAttached>-->
		        				<!-- <shadedClassifierName>jar-with-dependencies</shadedClassifierName>-->
		        				<transformers>
		        					<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
		 								<mainClass>mdpSynthesis.MainMDPSynthesis</mainClass>
			        						<!--<Build-Number>1.0.1</Build-Number>-->
		        					</transformer>
		        				</transformers>
		        			</configuration>
		        		</execution>
		        </executions>				 
			</plugin>
			
  			
			<!-- Clean plugin  -->
			<plugin>
			    <artifactId>maven-clean-plugin</artifactId>
			    <version>3.1.0</version>
			    <configuration>
				      <filesets>
					        <fileset>
						          <directory>${basedir}</directory>
						          <includes>
						            <include>Server*</include>
						            <include>out*</include>
						          </includes>
					          <followSymlinks>false</followSymlinks>
					        </fileset>
   					        <fileset>
 					      	      <directory>${basedir}/target</directory>
						          <includes>
						            <include>libs*</include>
						            <include>plotFront*</include>
						          </includes>
   					        </fileset>
				      </filesets>
			    </configuration>
		  </plugin>
  			
	</plugins>
  </build>
</project>